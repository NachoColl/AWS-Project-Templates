AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

Description: >
  AWS CloudFormation for the project. 

Parameters:

  RepositoryName:
    Type: String
    Description: The Git repo name.
    AllowedPattern: ^[a-zA-Z0-9-]*$

  RepositoryBranchName:
    Type: String
    Description: Environment stage (e.g. dev).

  DomainName:
    Type: String
    Description: The domain name (e.g. example.com).

  CreateRoute53HostedZone:
    Default: false
    Type: String
    AllowedValues: [true, false]

Conditions:
  IsProd: !Equals [!Ref RepositoryBranchName, prod]  
  CreateHostedZone: !Equals [!Ref CreateRoute53HostedZone, true]

Resources:

  #################################################################################
  # Website S3 Bucket                                                             #
  #################################################################################

  S3SiteBucket:
      Type: "AWS::S3::Bucket"
      DeletionPolicy: Delete
      Properties:
        BucketName: !If [IsProd, !Ref DomainName, !Sub "${RepositoryBranchName}.${DomainName}"]
        WebsiteConfiguration:
          IndexDocument: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3SiteBucket
      PolicyDocument:
        Id: !Sub "${RepositoryName}-${RepositoryBranchName}-website-policy"
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3SiteBucket
                - /*

  ###########################
  # https certificates
  ###########################

  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    DeletionPolicy: Delete
    Properties:
      DomainName: !If [IsProd, !Ref DomainName, !Sub "${RepositoryBranchName}.${DomainName}"]
      SubjectAlternativeNames: 
        - !If [IsProd, !Sub "www.${DomainName}", !Sub "www.${RepositoryBranchName}.${DomainName}"]
      ValidationMethod: DNS
    

  ###########################
  # cloudfront
  ###########################
  
  # Distribution of PRODUCTION Environment content.
  CloudFrontDistribution:
      Type: "AWS::CloudFront::Distribution"
      DeletionPolicy: Delete
      DependsOn:
        - S3SiteBucket
        - Certificate
      Properties:
        DistributionConfig:
          Enabled: true
          Aliases:
            - !If [IsProd, !Ref DomainName, !Sub "${RepositoryBranchName}.${DomainName}"]
            - !If [IsProd, !Sub "www.${DomainName}", !Sub "www.${RepositoryBranchName}.${DomainName}"]
          DefaultRootObject: index.html
          PriceClass: PriceClass_All
          Origins:
            -
              DomainName: !Join ["", [!If [IsProd, !Ref DomainName, !Sub "${RepositoryBranchName}.${DomainName}"], ".", !FindInMap [RegionMap, !Ref "AWS::Region", websiteendpoint]]]
              Id: S3Origin
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: http-only
          DefaultCacheBehavior:
            TargetOriginId: S3Origin
            AllowedMethods:
              - GET
              - HEAD
            Compress: true
            DefaultTTL: 31536000 # we use cloudfront invalidation to refresh.
            MinTTL: 31536000 # we use cloudfront invalidation to refresh.
            ForwardedValues:
              QueryString: false
              Cookies:
               Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            AcmCertificateArn: !Ref Certificate
            SslSupportMethod: sni-only

  ###########################
  # Route53
  ###########################

  # Hosted zone
  Route53HostedZone:
      Type: "AWS::Route53::HostedZone"
      Condition: CreateHostedZone
      DeletionPolicy: Delete
      Properties:
        HostedZoneConfig:
          Comment: !Sub "Created by CloudFormation stack: ${AWS::StackName}"
        Name: !Ref DomainName

  Route53RecordSetGroup:
      Type: "AWS::Route53::RecordSetGroup"
      DeletionPolicy: Delete
      Properties:
        HostedZoneName: !If [IsProd, !Sub "${DomainName}.", !Sub "${RepositoryBranchName}.${DomainName}."]
        RecordSets:
          - Name: !If [IsProd, !Ref DomainName, !Sub "${RepositoryBranchName}.${DomainName}"]
            Type: A
            # Resolve to CloudFront distribution
            AliasTarget:
              HostedZoneId: Z2FDTNDATAQYW2 # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html
              DNSName: !GetAtt CloudFrontDistribution.DomainName
      
Mappings:
  RegionMap:
    ap-northeast-1:
      S3hostedzoneID: "Z2M4EHUR26P7ZW"
      websiteendpoint: "s3-website-ap-northeast-1.amazonaws.com"
    ap-northeast-2:
      S3hostedzoneID: "Z3W03O7B5YMIYP"
      websiteendpoint: "s3-website.ap-northeast-2.amazonaws.com"
    ap-south-1:
      S3hostedzoneID: "Z11RGJOFQNVJUP"
      websiteendpoint: "s3-website.ap-south-1.amazonaws.com"
    ap-southeast-1:
      S3hostedzoneID: "Z3O0J2DXBE1FTB"
      websiteendpoint: "s3-website-ap-southeast-1.amazonaws.com"
    ap-southeast-2:
      S3hostedzoneID: "Z1WCIGYICN2BYD"
      websiteendpoint: "s3-website-ap-southeast-2.amazonaws.com"
    eu-central-1:
      S3hostedzoneID: "Z21DNDUVLTQW6Q"
      websiteendpoint: "s3-website.eu-central-1.amazonaws.com"
    eu-west-1:
      S3hostedzoneID: "Z1BKCTXD74EZPE"
      websiteendpoint: "s3-website-eu-west-1.amazonaws.com"
    sa-east-1:
      S3hostedzoneID: "Z7KQH4QJS55SO"
      websiteendpoint: "s3-website-sa-east-1.amazonaws.com"
    us-east-1:
      S3hostedzoneID: "Z3AQBSTGFYJSTF"
      websiteendpoint: "s3-website-us-east-1.amazonaws.com"
    us-east-2:
      S3hostedzoneID: "Z2O1EMRO9K5GLX"
      websiteendpoint: "s3-website.us-east-2.amazonaws.com"
    us-west-1:
      S3hostedzoneID: "Z2F56UZL2M1ACD"
      websiteendpoint: "s3-website-us-west-1.amazonaws.com"
    us-west-2:
      S3hostedzoneID: "Z3BJ6K6RIION7M"
      websiteendpoint: "s3-website-us-west-2.amazonaws.com"

Outputs:

  WebsiteBucket:
    Value: !Ref S3SiteBucket    
 
  CloudfrontDistributionId:
    Value: !Ref CloudFrontDistribution
 
 
  